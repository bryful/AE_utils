var scaleSetProp = function(prop,scale)
    {
        if ( (prop instanceof Property) === false)
        {
            return false ;
        }
        var v = prop.value;
        if (v.length !=3) return false

        //スケールが1なら何もしない
        if (scale==1) return true;

        if (prop.numKeys<=0)
        {
            var v = prop.value;
            v[0] = v[0]*scale;
            v[1] = v[1]*scale;
            v[2] = v[2]*scale;
            prop.setValue(v);
            
        }else {
            var values = [];
            var times = [];
            for ( var i=1; i<=prop.numKeys; i++)
            {
                times.push(prop.keyTime(i));
                var v = prop.keyValue(i);
                v[0] = v[0]*scale;
                v[1] = v[1]*scale;
                v[2] = v[2]*scale;
                values.push(v);
            }
            prop.setValuesAtTimes(times,values);
        }
        return true;
    }
    //*************************
    var scaleSetLayer = function(lyr,scale,addName)
    {
        var ret = false;
        var b1 = false;
        var b2 = false;
        if ( (lyr instanceof CameraLayer) || (lyr instanceof LightLayer) )
        {
            var p1 = lyr.property("ADBE Transform Group").property("ADBE Anchor Point");
            var p2 = lyr.property("ADBE Transform Group").property("ADBE Position");
            b1 = scaleSetProp(p1,scale);
            b2 = scaleSetProp(p2,scale);
        }else if (lyr.threeDLayer === true){
            var p1 = lyr.property("ADBE Transform Group").property("ADBE Position");
            var p2 = lyr.property("ADBE Transform Group").property("ADBE Scale");
            b1 = scaleSetProp(p1,scale);
            b2 = scaleSetProp(p2,scale);
        }
        
        if ((b1==true)&&(b2==true))
        {
            lyr.name = combine(lyr.name , addName);
            ret = true;
        }
        return ret;
    }
    var scaleExec = function()
    {
       
        if (edScaleTargetComp.targetComp==null) return;
        var cmp = edScaleTargetComp.targetComp;
        var s = edScaleSale.text.trim();
        if (s=="")
        {
            alert("スケールが入力されていません");
            return;
        }
        var scaleV = Number(s);
        if (isNaN(scaleV)===true)
        {
            alert("スケールが不正です");
            return;
        }else{
            if (scaleV==0) {
                alert("0です");
                return;
            }
        }
    	var addName = edScaleAfter.text;
        app.beginUndoGroup("カメラスケール");

        var newComp = cmp.duplicate();
        newComp.name =  combine(cmp.name , addName);
        var lc = newComp.numLayers;
        var lyrs = [];
        if (lc>0)
        {
            for ( var i=1; i<=lc; i++)
            {
                var lyr = newComp.layer(i);
                if ( ( lyr instanceof CameraLayer)||(lyr.threeDLayer===true))
                {
                    lyrs.push(lyr);
                }
            }
        }
        if (lyrs.length<=0)
        {
            alert("3Dレイヤーがありません");
            return;
        }
        var cnt = 0;
        for ( var i=0; i<lyrs.length; i++)
        {
            if (scaleSetLayer(lyrs[i],scaleV,addName)==true)
            {
                cnt++;
            }
        }
        if (cnt<=0)
        {
            newComp.remove();
            alert("原因不明で失敗しました");
        }else{
            
            if (cnt ==lyrs.length)
            {
                alert("正常にレイヤを" + cnt + "枚修正しました");
            }
        }
    }