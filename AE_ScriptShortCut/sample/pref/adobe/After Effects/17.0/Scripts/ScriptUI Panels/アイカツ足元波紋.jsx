(function (me){	if ( app.preferences.getPrefAsLong("Main Pref Section", "Pref_SCRIPTING_FILE_NETWORK_SECURITY") != 1){		var s = "すみません。以下の設定がオフになっています。\r\n\r\n";		s +=  "「環境設定：一般設定：スクリプトによるファイルへの書き込みとネットワークへのアクセスを許可」\r\n";		s += "\r\n";		s += "このスクリプトを使う為にはオンにする必要が有ります。\r\n";		alert(s);		return;	}	function getFileNameWithoutExt(s)	{		var ret = s;		var idx = ret.lastIndexOf(".");		if ( idx>=0){			ret = ret.substring(0,idx);		}		return ret;	}	function getScriptName()	{		var ary = $.fileName.split("/");		return File.decode( getFileNameWithoutExt(ary[ary.length-1]));	}	function getScriptPath()	{		var s = $.fileName;		return s.substring(0,s.lastIndexOf("/"));	}	var scriptName = getScriptName();		var motoComp = null;		var targetComp = null;	var pos1Layer = null;	var pos2Layer = null;	var layerSortInPoint = function(a,b)	{		if (a.inPoint<b.inPoint) return -1;		if (a.inPoint>b.inPoint) return 1;			}//*************************//MainWindowvar winObj = ( me instanceof Panel) ? me : new Window("palette", "アイカツ足元波紋", [0,0,0+220,0+270]  ,{resizeable:true, maximizeButton:true, minimizeButton:true});
//*************************//controlsvar yp = 10;var lbCaption = winObj.add("statictext",[10, yp, 10+200, yp+20],"アイカツ足元波紋");yp+=20;var btnMotoComp = winObj.add("button",[10, yp, 10+200, yp+25],"インサートするコンポ");yp+=25;var lbMotoComp = winObj.add("statictext",[11, yp, 11+200, yp+20],"None");yp+=20+10;var btnPos1 = winObj.add("button",[10, yp, 10+200, yp+25],"足位置１");yp+= 25;var lbPos1 = winObj.add("statictext",[11, yp, 11+200, 95+20],"None");yp+= 20+10;var btnPos2 = winObj.add("button",[10, yp, 10+200, yp+25],"足位置２");yp+= 25;var lbPos2 = winObj.add("statictext",[11, yp, 11+200, yp+20],"None");yp+= 20 + 10;var btnExec = winObj.add("button",[10, yp, 10+200, yp+30],"実行");//*************************var getComp = function(){	var ret = null;	var sels = app.project.selection;	if (sels.length<=0){		alert("コンポが選ばれていません");	}else {		var ss = [];		for ( var i=0; i<sels.length;i++){			if (sels[i] instanceof CompItem){				ss.push(sels[i]);			}		}		if (ss.length<=0){			alert("コンポが選ばれていません");		}else if (ss.length>=2){			alert("コンポは1個のみ選んでください");		}else{			ret =  ss[0];		}	}	return ret;}//*************************var getLayer = function(){	var ret = null;	var ac = app.project.activeItem;	if (ac instanceof CompItem){		var lyrs = ac.selectedLayers;		if (lyrs.length<=0) {			alert ("レイヤが選ばれていません");		}else if (lyrs.length>=2) {			alert ("レイヤはひとつのみ選んでください");		}else{			if (lyrs[0].threeDLayer !=true){			alert ("レイヤが3Dレイヤーではありません");			}else{				ret = lyrs[0];			}		}	}else{		alert ("ターゲットコンポがアクティブになっていない!");	}	return ret;}//*************************var execGetComp = function(){	var r = getComp();	if (r!=null) {		motoComp = r;		lbMotoComp.text = motoComp.name;	}else{		if (motoComp instanceof CompItem) {			lbMotoComp.text = motoComp.name;		}else{			lbMotoComp.text = "None";		}	}}btnMotoComp.onClick = execGetComp;//*************************var execGetPos1 = function(){	var l = getLayer();	if (l==null)  return;	if (pos2Layer != null){		if ( l.containingComp.id != pos2Layer.containingComp.id) {			alert("同じコンポではないです");			return;		}		if (pos2Layer.index == l.index){			alert("同じレイヤです");			return;		}	}	pos1Layer =  l;	lbPos1.text = l.name;	targetComp =  l.containingComp;}btnPos1.onClick = execGetPos1;//*************************var execGetPos2 = function(){	var l = getLayer();	if (l==null)  return;		if (pos1Layer != null){		if ( l.containingComp.id != pos1Layer.containingComp.id) {			alert("同じコンポではないです");			return;		}	//alert( pos1Layer.index +" : "+ l.index + "["+pos1Layer.name+"["+l.name );		if (pos1Layer.index == l.index){			alert("同じレイヤです");			return;		}	}	pos2Layer =  l;	lbPos2.text = pos2Layer.name;	targetComp =  l.containingComp;}btnPos2.onClick = execGetPos2;//*************************var exec = function(){	if ((targetComp == null)||(motoComp==null)) {		alert("ターゲットが選択されていません")	}	app.beginUndoGroup("生方かすみ-11");	var tbl= [80,90,70,110,50,70,95,100,80,90,150,100,80,90];	var tblMax = tbl.length;	var pc = 0;	var bd = -100;	if (pos1Layer != null){		var p1 = pos1Layer.property("ADBE Transform Group").property("ADBE Position");		if (p1.numKeys>4){			var st = 3;			var lt = p1.numKeys-1;						for (var i= st; i<=lt; i++){				//ボーダーより上なら発生なし				var flg = false;				var flgS = false;				if (p1.keyValue(i)[1] <bd ) {					if ( (p1.keyValue(i-1)[1] >bd )&&(p1.keyValue(i-2)[1] >bd )&& (p1.keyValue(i+1)[1] <bd )) {						flg = true;					}else{						continue;					}				}				//前2フレームがbポーだーより上、後ろのフレームがボーダーより下なら発生。				if ( (p1.keyValue(i-1)[1] <bd )&&(p1.keyValue(i-2)[1] <bd )&& (p1.keyValue(i+1)[1] >bd )) flg = true;				//				if  ( (p1.keyValue(i-1)[1] >bd )&&(p1.keyValue(i)[1])>bd){					var v = Math.sqrt( Math.pow(p1.keyValue(i-1)[0] -p1.keyValue(i)[0] ,2) + Math.pow(p1.keyValue(i-1)[2] -p1.keyValue(i)[2],2));					if (v>10) {						flg = true;						flgS = true;					}				}								if (flg==false) continue;								var mc = targetComp.layers.add(motoComp);				mc.blendingMode = BlendingMode.OVERLAY;				mc.startTime = p1.keyTime(i);				mc.threeDLayer = true;				var v = p1.keyValue(i);				v[1] = 0;				mc.property("ADBE Transform Group").property("ADBE Position").setValue(v);				mc.property("ADBE Transform Group").property("ADBE Rotate X").setValue(90);								var s = tbl[pc];				if (flgS) s *= 0.5;				pc = (pc+1) % tblMax;				mc.property("ADBE Transform Group").property("ADBE Scale").setValue([s,s,s]);
				if (flgS) {					mc.property("ADBE Transform Group").property("Opacity").setValue(35);
				}							}				}	}	if (pos1Layer != null){		var p2 = pos2Layer.property("ADBE Transform Group").property("ADBE Position");		if (p2.numKeys>4){			var st = 3;			var lt = p2.numKeys-1;			//if (lt >600) lt = 600;						for (var i= st; i<=lt; i++){				//ボーダーより上なら発生なし				var flg = false;				var flgS = false;				if (p2.keyValue(i)[1] <bd ) {					if ( (p2.keyValue(i-1)[1] >bd )&&(p2.keyValue(i-2)[1] >bd )&& (p2.keyValue(i+1)[1] <bd )) {						flg = true;					}else{						continue;					}				}				//前2フレームがbポーだーより上、後ろのフレームがボーダーより下なら発生。				if ((flg==false)&& (p2.keyValue(i-1)[1] <bd )&&(p2.keyValue(i-2)[1] <bd )&& (p2.keyValue(i+1)[1] >bd )) flg = true;				//				if  ((flg==false)&& (p2.keyValue(i-1)[1] >bd )&&(p2.keyValue(i)[1]>bd)){					var v = Math.sqrt( Math.pow(p2.keyValue(i-1)[0] -p2.keyValue(i)[0] ,2) + Math.pow(p2.keyValue(i-1)[2] -p2.keyValue(i)[2],2));					if (v>10) {						flg=true;						flgS=true;					}				}								if (flg==false) continue;								var mc = targetComp.layers.add(motoComp);				mc.blendingMode = BlendingMode.OVERLAY;				mc.startTime = p2.keyTime(i);				mc.threeDLayer = true;				var v = p2.keyValue(i);				v[1] = 0;				mc.property("ADBE Transform Group").property("ADBE Position").setValue(v);				mc.property("ADBE Transform Group").property("ADBE Rotate X").setValue(90);								var s = tbl[pc];				if (flgS) s *= 0.5;				pc = (pc+1) % tblMax;				mc.property("ADBE Transform Group").property("ADBE Scale").setValue([s,s,s]);
				if (flgS) {					mc.property("ADBE Transform Group").property("Opacity").setValue(35);
				}								}				}	}	app.endUndoGroup();		targetComp = null;	pos1Layer = null;	pos2Layer = null;	lbPos1.text = "None";	lbPos2.text = "None";}btnExec.onClick = exec;//*************************//window show	if ( ( me instanceof Panel) == false){
		winObj.center(); 
		winObj.show();
	}})(this);